<?xml version="1.0"?>
<!DOCTYPE bindings>
<bindings xmlns="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    xmlns:html="http://www.w3.org/1999/xhtml">
  <binding id="encrypted">
    <content>
        <html:iframe  style="border: 0;"></html:iframe>
    </content>
    <implementation>
      <constructor>
        this.src = this.getAttribute('src');
      </constructor>
        <property name="src">
          <getter><![CDATA[
            return this.getAttribute('src');
            ]]></getter>
          <setter><![CDATA[
            this.setAttribute('src', val);

            while ((val instanceof String) && val.substring(11) === 'javascript:') {
              val = eval(val);
            }

            if (val == null) return;

            var that = this;
            var cb = function(data) {
              that.dispatchEvent(new CustomEvent('-encrypted-element-load', {
              detail: data,
              bubbles: true
              }));
            };

            function decodeDataURI(uri) {
              uri = uri.substring(5);
              var sep;

              sep = uri.indexOf(',');
              // Invalid
              if (sep < 0) {
                return null;
              }
              var prefix = uri.substring(sep);
              var data = uri.substring(sep+1);

              sep = prefix.lastIndexOf(';');
              if (sep >= 0 && prefix.substring(sep+1) === 'base64') {
                data = atob(data)
              }
              return data;
            }

            var data;
            if (val.substring(5) === 'data:') {
              var data = decodeDataURI(val);
              if (data) {
                cb(data);
              }
            } else {
              var oReq = new window.XMLHttpRequest();
              oReq.onload = function() {
                cb(this.responseText);
              };
              oReq.open("get", val, true);
              oReq.send();
            }
            ]]></setter>
        </property>
    </implementation>
  </binding>
</bindings>
